{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/create-employee/create-employee.component.ts","webpack:///src/app/create-employee/create-employee.component.html","webpack:///src/app/employee-details/employee-details.component.ts","webpack:///src/app/employee-details/employee-details.component.html","webpack:///src/app/employee-list/employee-list.component.ts","webpack:///src/app/employee-list/employee-list.component.html","webpack:///src/app/employee.service.ts","webpack:///src/app/employee.ts","webpack:///src/app/update-employee/update-employee.component.ts","webpack:///src/app/update-employee/update-employee.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","redirectTo","pathMatch","component","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","CreateEmployeeComponent","employeeService","router","employee","submitted","createEmployee","subscribe","data","console","log","error","gotoList","save","navigate","onSubmit","EmployeeDetailsComponent","route","snapshot","params","getEmployee","list","EmployeeListComponent","dumm","reloadData","employees","getEmployeesList","deleteEmployee","postCeleryData","celeryTask","EmployeeService","http","get","post","value","patch","responseType","providedIn","Employee","UpdateEmployeeComponent","updateEmployee","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { EmployeeDetailsComponent } from './employee-details/employee-details.component';\nimport { CreateEmployeeComponent } from './create-employee/create-employee.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { EmployeeListComponent } from './employee-list/employee-list.component';\nimport { UpdateEmployeeComponent } from './update-employee/update-employee.component';\n\nconst routes: Routes = [\n  { path: '', redirectTo: 'employees', pathMatch: 'full' },\n  { path: 'employees', component: EmployeeListComponent },\n  { path: 'add', component: CreateEmployeeComponent },\n  { path: 'update/:id', component: UpdateEmployeeComponent },\n  { path: 'details/:id', component: EmployeeDetailsComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Angular 9 + FLASK CRUD App';\n}","<nav class=\"navbar navbar-expand-sm bg-primary navbar-dark\">\n  <!-- Links -->\n  <ul class=\"navbar-nav\">\n    <li class=\"nav-item\">\n        <a routerLink=\"employees\" class=\"nav-link\" routerLinkActive=\"active\">Employee List</a>\n    </li>\n    <li class=\"nav-item\">\n        <a routerLink=\"add\" class=\"nav-link\" routerLinkActive=\"active\">Add Employee</a>\n    </li>\n  </ul>\n</nav>\n<div class=\"container\">\n  <br>\n  <h2 style=\"text-align: center;\">{{title}}</h2>\n  <hr>  \n  <div class=\"card\">\n    <div class=\"card-body\">\n  <router-outlet></router-outlet>\n    </div>\n  </div>\n</div>\n\n<footer class=\"footer\">\n  <div class=\"container\">\n      <span>POC @ RISHAB LOKRAY @ CLAIMFOUND</span>\n  </div>\n</footer>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { CreateEmployeeComponent } from './create-employee/create-employee.component';\nimport { EmployeeDetailsComponent } from './employee-details/employee-details.component';\nimport { EmployeeListComponent } from './employee-list/employee-list.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { UpdateEmployeeComponent } from './update-employee/update-employee.component';\n@NgModule({\n  declarations: [\n    AppComponent,\n    CreateEmployeeComponent,\n    EmployeeDetailsComponent,\n    EmployeeListComponent,\n    UpdateEmployeeComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }","import { EmployeeService } from '../employee.service';\nimport { Employee } from '../employee';\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-create-employee',\n  templateUrl: './create-employee.component.html',\n  styleUrls: ['./create-employee.component.css']\n})\nexport class CreateEmployeeComponent implements OnInit {\n\n  employee: Employee = new Employee();\n  submitted = false;\n\n  constructor(private employeeService: EmployeeService,\n    private router: Router) { }\n\n  ngOnInit() {\n  }\n\n  newEmployee(): void {\n    this.submitted = false;\n    this.employee = new Employee();\n  }\n\n  save() {\n    this.employeeService.createEmployee(this.employee)\n      .subscribe(data => console.log(data), error => console.log(error));\n    this.employee = new Employee();\n    this.gotoList();\n  }\n\n  onSubmit() {\n    this.submitted = true;\n    this.save();    \n  }\n\n  gotoList() {\n    this.router.navigate(['/employees']);\n  }\n}","<h3>Create Employee</h3>\n<div [hidden]=\"submitted\" style=\"width: 400px;\">\n  <form (ngSubmit)=\"onSubmit()\">\n    <div class=\"form-group\">\n      <label for=\"name\">Name</label>\n      <input type=\"text\" class=\"form-control\" id=\"name\" required [(ngModel)]=\"employee.name\" name=\"firstName\">\n    </div>\n\n    <div class=\"form-group\">\n      <label for=\"name\">Email</label>\n      <input type=\"text\" class=\"form-control\" id=\"email\" required [(ngModel)]=\"employee.email\" name=\"email\">\n    </div>\n\n    <div class=\"form-group\">\n      <label for=\"name\">Phone</label>\n      <input type=\"text\" class=\"form-control\" id=\"phone\" required [(ngModel)]=\"employee.phone\" name=\"phone\">\n    </div>\n\n    <button type=\"submit\" class=\"btn btn-success\">Submit</button>\n  </form>\n</div>\n\n<div [hidden]=\"!submitted\">\n  <h4>You submitted successfully!</h4>\n</div>","import { Employee } from '../employee';\nimport { Component, OnInit, Input } from '@angular/core';\nimport { EmployeeService } from '../employee.service';\nimport { EmployeeListComponent } from '../employee-list/employee-list.component';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-employee-details',\n  templateUrl: './employee-details.component.html',\n  styleUrls: ['./employee-details.component.css']\n})\nexport class EmployeeDetailsComponent implements OnInit {\n\n  id: number;\n  employee: Employee;\n\n  constructor(private route: ActivatedRoute,private router: Router,\n    private employeeService: EmployeeService) { }\n\n  ngOnInit() {\n    this.employee = new Employee();\n\n    this.id = this.route.snapshot.params['id'];\n    \n    this.employeeService.getEmployee(this.id)\n      .subscribe(data => {\n        console.log(data)\n        this.employee = data;\n      }, error => console.log(error));\n  }\n\n  list(){\n    this.router.navigate(['employees']);\n  }\n}","<h2>Employee Details</h2> \n\n<hr/>\n<div *ngIf=\"employee\">\n  <div>\n    <label><b>Name: </b></label> {{employee.name}}\n  </div>\n  <div>\n    <label><b>Email: </b></label> {{employee.email}}\n  </div>\n  <div>\n    <label><b>Phone: </b></label> {{employee.phone}}\n  </div>  \n</div>\n\n<br>\n<br>\n<button (click)=\"list()\" class=\"btn btn-primary\">Back to Employee List</button><br>","import { EmployeeDetailsComponent } from '../employee-details/employee-details.component';\nimport { Observable } from \"rxjs\";\nimport { EmployeeService } from \"../employee.service\";\nimport { Employee } from \"../employee\";\nimport { Component, OnInit } from \"@angular/core\";\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: \"app-employee-list\",\n  templateUrl: \"./employee-list.component.html\",\n  styleUrls: [\"./employee-list.component.css\"]\n})\nexport class EmployeeListComponent implements OnInit {\n  employees: Observable<Employee[]>;\n  data: Observable<Employee[]>;\n  dumm: Employee = new Employee();\n\n  constructor(private employeeService: EmployeeService,\n    private router: Router) {}\n\n  ngOnInit() {\n    this.reloadData();\n  }\n\n  reloadData() {\n    this.employees = this.employeeService.getEmployeesList();\n  }\n\n  deleteEmployee(id: number) {\n    this.employeeService.deleteEmployee(id)\n      .subscribe(\n        data => {\n          console.log(data);\n          this.reloadData();\n        },\n        error => console.log(error));\n  }\n\n  employeeDetails(id: number){\n    this.router.navigate(['details', id]);\n  }\n\n  updateEmployee(id: number){\n    this.router.navigate(['update',id]);\n  }\n\n  celeryTask(){\n    console.log(\"herer\");\n\n  this.employeeService.postCeleryData(this.dumm)\n      .subscribe(data => console.log(data), error => console.log(error));\n\n\n  }\n}","<div class=\"panel panel-primary\">\n    <div class=\"panel-heading\">\n      <h2>Employee List</h2>\n      <button (click)=\"celeryTask()\" class=\"btn btn-danger\">CELERY</button>\n    </div>\n    <div class=\"panel-body\">\n      <table class=\"table table-striped\">\n        <thead>\n          <tr>\n            <th>ID</th>\n            <th>Name</th>\n            <th>Email</th>\n            <th>Phone</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor=\"let employee of employees | async\">\n            <td>{{employee.id}}</td>\n            <td>{{employee.name}}</td>\n            <td>{{employee.email}}</td>\n            <td>{{employee.phone}}</td>\n            <td><button (click)=\"deleteEmployee(employee.id)\" class=\"btn btn-danger\">Delete</button>\n                <button (click)=\"employeeDetails(employee.id)\" class=\"btn btn-info\" style=\"margin-left: 10px\">Details</button>\n                <button (click)=\"updateEmployee(employee.id)\" class=\"btn btn-info\" style=\"margin-left: 20px\">Update</button>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  </div>","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EmployeeService {\n\n  \n  //private baseUrl = 'http://localhost:8000';\n\n  constructor(private http: HttpClient) { }\n\n  getEmployee(id: number): Observable<any> {\n    return this.http.get(`api/posts/${id}`);\n  }\n\n  createEmployee(employee: Object): Observable<Object> {\n    return this.http.post(`api/posts`, employee);\n  }\n\n  updateEmployee(id: number, value: any): Observable<Object> {\n    return this.http.patch(`api/posts/${id}`, value);\n  }\n\n  deleteEmployee(id: number): Observable<any> {\n    return this.http.delete(`api/posts/${id}`, { responseType: 'text' });\n  }\n\n  getEmployeesList(): Observable<any> {\n    return this.http.get(`api/posts`);\n  }\n\n  postCeleryData(employee: Object): Observable<any>{\n    \n    return this.http.post(`api/tester`,employee);\n  }\n}","export class Employee {\n    id: number;\n    name: string;\n    email: string;\n    phone: number;\n}","import { Component, OnInit } from '@angular/core';\nimport { Employee } from '../employee';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { EmployeeService } from '../employee.service';\n\n@Component({\n  selector: 'app-update-employee',\n  templateUrl: './update-employee.component.html',\n  styleUrls: ['./update-employee.component.css']\n})\nexport class UpdateEmployeeComponent implements OnInit {\n\n  id: number;\n  employee: Employee;\n\n  constructor(private route: ActivatedRoute,private router: Router,\n    private employeeService: EmployeeService) { }\n\n  ngOnInit() {\n    this.employee = new Employee();\n\n    this.id = this.route.snapshot.params['id'];\n    \n    this.employeeService.getEmployee(this.id)\n      .subscribe(data => {\n        console.log(data)\n        this.employee = data;\n      }, error => console.log(error));\n  }\n\n  updateEmployee() {\n    this.employeeService.updateEmployee(this.id, this.employee)\n      .subscribe(data => console.log(data), error => console.log(error));\n    this.employee = new Employee();\n    this.gotoList();\n  }\n\n  onSubmit() {\n    this.updateEmployee();    \n  }\n\n  gotoList() {\n    this.router.navigate(['/employees']);\n  }\n}","<h3>Update Employee</h3>\n<div hidden=\"submitted\" style=\"width: 400px;\">\n  <form (ngSubmit)=\"onSubmit()\">\n    <div class=\"form-group\">\n      <label for=\"name\">Name</label>\n      <input type=\"text\" class=\"form-control\" id=\"name\" required [(ngModel)]=\"employee.name\" name=\"name\">\n    </div>\n\n    <div class=\"form-group\">\n      <label for=\"name\">email</label>\n      <input type=\"text\" class=\"form-control\" id=\"email\" required [(ngModel)]=\"employee.email\" name=\"email\">\n    </div>\n\n    <div class=\"form-group\">\n      <label for=\"name\">Phone</label>\n      <input type=\"text\" class=\"form-control\" id=\"phone\" required [(ngModel)]=\"employee.phone\" name=\"phone\">\n    </div>\n\n    <button type=\"submit\" class=\"btn btn-success\">Submit</button>\n  </form>\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));"]}